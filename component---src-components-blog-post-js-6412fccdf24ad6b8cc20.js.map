{"version":3,"sources":["webpack:///./src/components/comments.js","webpack:///./src/components/blog/hero.js","webpack:///./src/components/blog/heading.js","webpack:///./src/components/blog/post.js","webpack:///./src/utils/slug.js"],"names":["Comments","_ref","id","title","disqusShortname","_4017568694","data","site","siteMetadata","Object","core_browser_esm","lib","shortname","config","propTypes","PropTypes","string","isRequired","Container","styled_base_browser_esm","target","rhythm","props","theme","shadow","img","css","base64","src","gradient","blog_hero","hero","children","idx","_","childImageSharp","fluid","Heading","SubHeading","heading","date","seed","fixed","BlogContent","colors","primary","query","__webpack_exports__","input","post","markdownRemark","pageContext","layout","header","frontmatter","seo","description","excerpt","keywords","tags","dangerouslySetInnerHTML","__html","html","comments","slug","replace"],"mappings":"6KAKA,SAASA,EAATC,GAA+B,IAAZC,EAAYD,EAAZC,GAAIC,EAAQF,EAARE,MAGFC,EAHUC,EAAAC,KAE3BC,KACEC,aAAeJ,gBAYnB,OAAKA,EAIEK,OAAAC,EAAA,EAAAD,CAACE,EAAA,gBAAD,CAAiBC,UAAWR,EAAiBS,OAAQ,CAACX,KAAIC,WAHxD,KAMXH,EAASc,UAAY,CACnBZ,GAAIa,IAAUC,OAAOC,WACrBd,MAAOY,IAAUC,OAAOC,YAGXjB,qDCpBTkB,EAAYT,OAAAU,EAAA,EAAAV,CAAA,OAAHW,OAAA,YAAGX,CAAH,8EAIIY,YAAO,KAJX,YAKFA,YAAO,GALL,wBAOX,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAPV,IAQX,SAAAF,GAAK,OAAKA,EAAMG,KAbIA,EAakBH,EAAMG,IAbjBC,WAAJ,yBACDD,EAAIE,OADH,0BAEDF,EAAIG,IAFH,OAa4BN,EAAMC,MAAMM,SAb3C,IAAAJ,GAKT,IAWAK,EAAA,SAAA7B,GAAsB,IAApB8B,EAAoB9B,EAApB8B,KAAMC,EAAc/B,EAAd+B,SACfP,EAAMQ,IAAIF,EAAM,SAAAG,GAAC,OAAIA,EAAEC,gBAAgBC,QAC7C,OAAO3B,OAAAC,EAAA,EAAAD,CAACS,EAAD,CAAWO,IAAKA,GAAMO,IClBzBK,EAAU5B,OAAAU,EAAA,EAAAV,CAAA,MAAHW,OAAA,YAAGX,CAAH,IACP6B,EAAa7B,OAAAU,EAAA,EAAAV,CAAA,KAAHW,OAAA,YAAGX,CAAH,cACAY,aAAO,IADP,KAIDkB,EAAA,SAAAtC,GAAA,IAAEE,EAAFF,EAAEE,MAAOqC,EAATvC,EAASuC,KAAMT,EAAf9B,EAAe8B,KAAf,OACbtB,OAAAC,EAAA,EAAAD,CAACqB,EAAD,CAAMC,KAAMA,EAAMU,KAAMtC,GACtBM,OAAAC,EAAA,EAAAD,CAACiC,EAAA,EAAD,KACEjC,OAAAC,EAAA,EAAAD,CAAC4B,EAAD,KAAUlC,GACVM,OAAAC,EAAA,EAAAD,CAAC6B,EAAD,KAAaE,0CCPnB,IAAMG,EAAclC,OAAAU,EAAA,EAAAV,CAAA,WAAHW,OAAA,YAAGX,CAAH,2BAOJ,SAAAa,GAAK,OAAIA,EAAMC,MAAMqB,OAAOC,SAPxB,MAyBJC,GAdEC,EAAA,iBAAA9C,GAAiD,ICpBxC+C,EDoBgBC,EAAwBhD,EAA/CK,KAAO4C,eAAuBC,EAAiBlD,EAAjBkD,YAC7C,OACE1C,OAAAC,EAAA,EAAAD,CAAC2C,EAAA,EAAD,CAAQC,OAAQ5C,OAAAC,EAAA,EAAAD,CAAC8B,EAAgBU,EAAKK,cACpC7C,OAAAC,EAAA,EAAAD,CAAC8C,EAAA,EAAD,CACEpD,MAAO8C,EAAKK,YAAYnD,MACxBqD,YAAaP,EAAKQ,QAClBC,SAAUT,EAAKK,YAAYK,OAE7BlD,OAAAC,EAAA,EAAAD,CAACkC,EAAD,CAAaiB,wBAAyB,CAACC,OAAQZ,EAAKa,QACpDrD,OAAAC,EAAA,EAAAD,CAACsD,EAAD,CAAU7D,IC7BQ8C,ED6BIG,EAAYa,KC5B/BhB,EAAMiB,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,KD4BJ9D,MAAO8C,EAAKK,YAAYnD,UAKrD","file":"component---src-components-blog-post-js-6412fccdf24ad6b8cc20.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {DiscussionEmbed} from 'disqus-react';\nimport {useStaticQuery, graphql} from 'gatsby';\n\nfunction Comments({id, title}) {\n  const {\n    site: {\n      siteMetadata: {disqusShortname},\n    },\n  } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          disqusShortname\n        }\n      }\n    }\n  `);\n\n  if (!disqusShortname) {\n    return null;\n  }\n\n  return <DiscussionEmbed shortname={disqusShortname} config={{id, title}} />;\n}\n\nComments.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Comments;\n","import idx from 'idx';\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport {css} from '@emotion/core';\nimport styled from '@emotion/styled';\nimport {rhythm} from '../../utils/typography';\n\nconst backgroundImage = img => css`\n  background-image: url(${img.base64});\n  background-image: url(${img.src});\n`;\n\nconst Container = styled.div`\n  background-position: center;\n  background-size: cover;\n  color: white;\n  margin-bottom: ${rhythm(1.5)};\n  padding: ${rhythm(2)} 0;\n  text-align: center;\n  ${props => props.theme.shadow}\n  ${props => (props.img ? backgroundImage(props.img) : props.theme.gradient)}\n`;\n\nexport default ({hero, children}) => {\n  const img = idx(hero, _ => _.childImageSharp.fluid);\n  return <Container img={img}>{children}</Container>;\n};\n\nexport const query = graphql`\n  fragment Hero on frontmatter_2 {\n    hero {\n      childImageSharp {\n        fluid(\n          quality: 80\n          maxWidth: 1920\n          duotone: {highlight: \"#ffcc5c\", shadow: \"#ff6f69\", opacity: 50}\n        ) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {graphql} from 'gatsby';\nimport {rhythm} from '../../utils/typography';\nimport Fixed from '../fixed';\nimport Hero from './hero';\n\nconst Heading = styled.h1``;\nconst SubHeading = styled.p`\n  margin-top: ${rhythm(-1 / 2)};\n`;\n\nexport default ({title, date, hero}) => (\n  <Hero hero={hero} seed={title}>\n    <Fixed>\n      <Heading>{title}</Heading>\n      <SubHeading>{date}</SubHeading>\n    </Fixed>\n  </Hero>\n);\n\nexport const query = graphql`\n  fragment Heading on frontmatter_2 {\n    title\n    date(formatString: \"MMMM DD, YYYY\")\n    ...Hero\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {graphql} from 'gatsby';\nimport slugify from '../../utils/slug';\nimport Layout from '../layout';\nimport Comments from '../comments';\nimport SEO from '../seo';\nimport BlogHeading from './heading';\n\nconst BlogContent = styled.article`\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nexport default ({data: {markdownRemark: post}, pageContext}) => {\n  return (\n    <Layout header={<BlogHeading {...post.frontmatter} />}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.excerpt}\n        keywords={post.frontmatter.tags}\n      />\n      <BlogContent dangerouslySetInnerHTML={{__html: post.html}} />\n      <Comments id={slugify(pageContext.slug)} title={post.frontmatter.title} />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      html\n      excerpt\n      frontmatter {\n        ...Heading\n        title\n        tags\n      }\n    }\n  }\n`;\n","export default function(input) {\n  return input.replace(/\\/+$/, '').replace(/^\\/+/, '');\n}\n"],"sourceRoot":""}