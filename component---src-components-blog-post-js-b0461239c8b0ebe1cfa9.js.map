{"version":3,"sources":["webpack:///./src/components/blog/hero.js","webpack:///./src/components/blog/heading.js","webpack:///./src/components/blog/post.js","webpack:///./src/utils/slug.js"],"names":["background","name","styles","gradiantBackground","_ref","theme","css","gradient","container","_ref2","rhythm","shadow","withTheme","_ref3","props","hero","children","img","idx","_","childImageSharp","fluid","Object","core_browser_esm","css_browser_esm","base64","src","Heading","styled_base_browser_esm","target","heading","title","date","blog_hero","seed","layout","BlogContent","colors","primary","query","__webpack_exports__","input","data","pageContext","disqusShortname","site","siteMetadata","post","markdownRemark","header","frontmatter","seo","description","excerpt","keywords","tags","dangerouslySetInnerHTML","__html","html","lib","shortname","config","id","slug","replace"],"mappings":"2MAOMA,EAAa,CAAHC,KAAA,UAAAC,OAAA,iEAMVC,EAAqB,SAAAC,GAAa,IAAXC,EAAWD,EAAXC,MAC3B,OAAOC,aAAP,CACID,EAAME,SADV,IAEIP,EAFJ,KAYIQ,EAAY,SAAAC,GAAA,IAAEJ,EAAFI,EAAEJ,MAAF,OAAaC,aAAb,YACLI,YAAO,GADF,oBAECA,YAAO,KAFR,sBAIdL,EAAMM,OAJQ,KAOHC,cAAU,SAAAC,GAA6B,IAb9BC,EAaGC,EAA2BF,EAA3BE,KAAMV,EAAqBQ,EAArBR,MAAOW,EAAcH,EAAdG,SAChCC,EAAMC,IAAIH,EAAM,SAAAI,GAAC,OAAIA,EAAEC,gBAAgBC,QAE7C,OACEC,OAAAC,EAAA,IAAAD,CAAA,OACEhB,IAAGgB,OAAAE,EAAA,EAAAF,CAAE,CACHd,EAAU,CAACH,UACXY,GApBgBH,EAoBMG,EApBGX,aAAJ,yBACHQ,EAAMW,OADH,0BAEHX,EAAMY,IAFH,KAGzB1B,EAHyB,KAoBQG,EAAmB,CAACE,WAFhD,KAKFW,KCnCDW,EAAUL,OAAAM,EAAA,EAAAN,CAAA,MAAHO,OAAA,YAAGP,CAAH,IAEEQ,EAAA,SAAA1B,GAAA,IAAE2B,EAAF3B,EAAE2B,MAAOC,EAAT5B,EAAS4B,KAAMjB,EAAfX,EAAeW,KAAf,OACbO,OAAAC,EAAA,IAAAD,CAACW,EAAD,CAAMlB,KAAMA,EAAMmB,KAAMH,GACtBT,OAAAC,EAAA,IAAAD,CAACa,EAAA,EAAD,KACEb,OAAAC,EAAA,IAAAD,CAACK,EAAD,KAAUI,GACVT,OAAAC,EAAA,IAAAD,CAAA,KACEhB,IAAKA,cAAF,cACaI,aAAO,IADpB,MAIFsB,0CCVT,IAAMI,EAAcd,OAAAM,EAAA,EAAAN,CAAA,OAAHO,OAAA,YAAGP,CAAH,2BAOJ,SAAAR,GAAK,OAAIA,EAAMT,MAAMgC,OAAOC,SAPxB,MAuCJC,GA5BEC,EAAA,iBAAApC,GAAyB,ICpBhBqC,EDoBPC,EAAuBtC,EAAvBsC,KAAMC,EAAiBvC,EAAjBuC,YAGFC,EAGfF,EAJFG,KACEC,aAAeF,gBAEDG,EACdL,EADFM,eAEF,OACE1B,OAAAC,EAAA,IAAAD,CAACa,EAAA,EAAD,CAAQc,OAAQ3B,OAAAC,EAAA,IAAAD,CAACQ,EAAgBiB,EAAKG,cACpC5B,OAAAC,EAAA,IAAAD,CAAC6B,EAAA,EAAD,CACEpB,MAAOgB,EAAKG,YAAYnB,MACxBqB,YAAaL,EAAKM,QAClBC,SAAUP,EAAKG,YAAYK,OAE7BjC,OAAAC,EAAA,IAAAD,CAACc,EAAD,CAAaoB,wBAAyB,CAACC,OAAQV,EAAKW,QACnDd,GACCtB,OAAAC,EAAA,IAAAD,CAACqC,EAAA,gBAAD,CACEC,UAAWhB,EACXiB,OAAQ,CACNC,ICvCYrB,EDuCAE,EAAYoB,KCtC3BtB,EAAMuB,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,KDuCvCjC,MAAOgB,EAAKG,YAAYnB,WAQlB","file":"component---src-components-blog-post-js-b0461239c8b0ebe1cfa9.js","sourcesContent":["import idx from 'idx';\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport {css} from '@emotion/core';\nimport {withTheme} from 'emotion-theming';\nimport {rhythm} from '../../utils/typography';\n\nconst background = css`\n  background-size: cover;\n  background-position: center;\n  color: white;\n`;\n\nconst gradiantBackground = ({theme}) => {\n  return css`\n    ${theme.gradient}\n    ${background}\n  `;\n};\n\nconst backgroundImage = props => css`\n  background-image: url(${props.base64});\n  background-image: url(${props.src});\n  ${background}\n`;\n\nconst container = ({theme}) => css`\n  padding: ${rhythm(2)} 0;\n  margin-bottom: ${rhythm(1.5)};\n  text-align: center;\n  ${theme.shadow}\n`;\n\nexport default withTheme(({hero, theme, children}) => {\n  const img = idx(hero, _ => _.childImageSharp.fluid);\n\n  return (\n    <div\n      css={[\n        container({theme}),\n        img ? backgroundImage(img) : gradiantBackground({theme}),\n      ]}\n    >\n      {children}\n    </div>\n  );\n});\n\nexport const query = graphql`\n  fragment Hero on frontmatter_2 {\n    hero {\n      childImageSharp {\n        fluid(\n          quality: 80\n          maxWidth: 1920\n          duotone: {highlight: \"#ffcc5c\", shadow: \"#ff6f69\", opacity: 50}\n        ) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport {css} from '@emotion/core';\nimport styled from '@emotion/styled';\nimport {graphql} from 'gatsby';\nimport {rhythm} from '../../utils/typography';\nimport {Fixed} from '../layout';\nimport Hero from './hero';\n\nconst Heading = styled.h1``;\n\nexport default ({title, date, hero}) => (\n  <Hero hero={hero} seed={title}>\n    <Fixed>\n      <Heading>{title}</Heading>\n      <p\n        css={css`\n          margin-top: ${rhythm(-1 / 2)};\n        `}\n      >\n        {date}\n      </p>\n    </Fixed>\n  </Hero>\n);\n\nexport const query = graphql`\n  fragment Heading on frontmatter_2 {\n    title\n    date(formatString: \"MMMM DD, YYYY\")\n    ...Hero\n  }\n`;\n","import React from 'react';\nimport {DiscussionEmbed} from 'disqus-react';\nimport styled from '@emotion/styled';\nimport {graphql} from 'gatsby';\nimport slugify from '../../utils/slug';\nimport Layout from '../layout';\nimport SEO from '../seo';\nimport BlogHeading from './heading';\n\nconst BlogContent = styled.div`\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nexport default ({data, pageContext}) => {\n  const {\n    site: {\n      siteMetadata: {disqusShortname},\n    },\n    markdownRemark: post,\n  } = data;\n  return (\n    <Layout header={<BlogHeading {...post.frontmatter} />}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.excerpt}\n        keywords={post.frontmatter.tags}\n      />\n      <BlogContent dangerouslySetInnerHTML={{__html: post.html}} />\n      {disqusShortname && (\n        <DiscussionEmbed\n          shortname={disqusShortname}\n          config={{\n            id: slugify(pageContext.slug),\n            title: post.frontmatter.title,\n          }}\n        />\n      )}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        disqusShortname\n      }\n    }\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      html\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        ...Heading\n        title\n        tags\n      }\n    }\n  }\n`;\n","export default function(input) {\n  return input.replace(/\\/+$/, '').replace(/^\\/+/, '');\n}\n"],"sourceRoot":""}